version: 2.0
jobs:
  deploy_to_gce:
    working_directory: ~/rooms-booking
    environment:
      GOOGLE_PROJECT_ID: rooms-booking-177603
      GOOGLE_PROJECT_NAME: rooms-booking
      GOOGLE_CLUSTER_NAME: rooms-booking-staging
      GOOGLE_COMPUTE_ZONE: asia-northeast1-a
      CLOUDSDK_CORE_DISABLE_PROMPTS: 1
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Docker client
          command: |
            # gettext-base to use the command envsubst
            apt-get install curl gettext-base
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Config and authentication google cloud
          command: |
            echo $GOOGLE_AUTH | base64 --decode -i > ${HOME}/gcloud-service-key.json

            gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
            gcloud --quiet config set project $GOOGLE_PROJECT_ID
            gcloud --quiet config set container/cluster $GOOGLE_CLUSTER_NAME

            # Reading the zone from the env var is not working so we set it here
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials $GOOGLE_CLUSTER_NAME
      - run:
          name: Build and push the api image
          command: |
            docker build -f ./api/Dockerfile.circleci.staging --rm=false -t ${GOOGLE_PROJECT_NAME}-api:$CIRCLE_SHA1 .
            docker tag ${GOOGLE_PROJECT_NAME}-api:$CIRCLE_SHA1 asia.gcr.io/${GOOGLE_PROJECT_ID}/${GOOGLE_PROJECT_NAME}-api:$CIRCLE_SHA1
            gcloud docker -- push asia.gcr.io/${GOOGLE_PROJECT_ID}/rooms-booking-api:$CIRCLE_SHA1
      - run:
          name: Deploy to google cloud
          command: |
            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
              chmod +x ./deploy/staging/deploy.sh
              ./deploy/staging/deploy.sh
            fi
  test:
    working_directory: ~/rooms-booking
    environment:
      ADMIN_EMAIL: dung.hoduy@asnet.com.vn
      ADMIN_NAME: Dung Ho
      SMTP_EMAIL: nw.testing02@gmail.com
      SMTP_PASSWORD: abcde12345-
      SMTP_HOST: localhost:3000
      DATABASE_URL_TEST: postgres://ubuntu:@127.0.0.1:5432/room_booking_test
    docker:
      - image: circleci/ruby:2.3
        environment:
          RAILS_ENV: test
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: ubuntu
    steps:
      - checkout
      - restore_cache:
          keys:
            - gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum api/Gemfile.lock" }}
      - run:
          name: Install Ruby Dependencies
          command: cd api && bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3 && cd ..
      - save_cache:
          key: gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum api/Gemfile.lock" }}
          paths:
            - api/vendor/bundle
      - run:
          name: Install System Dependencies
          command: sudo apt-get update && sudo apt-get install -y --no-install-recommends build-essential libpq-dev
      - run:
          name: Create DB
          command: cd api && bundle exec rake db:create db:schema:load --trace && cd ..
      - run:
          name: Run spec
          command: cd api && bundle exec rspec spec && cd ..
          environment:
            RAILS_ENV: test
workflows:
  version: 2
  build-and-test:
    jobs:
      - deploy_to_gce

