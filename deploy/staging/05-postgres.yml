kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: rb-staging
  name: postgres-data-claim
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: rb-staging
  name: postgres
  labels:
    name: postgres
    project: rooms-booking
    environment: staging
  annotations:
    pod.beta.kubernetes.io/init-containers: '[
      {
        "name": "remove-lost-found",
        "image": "busybox",
        "command": ["rm", "-fr", "/var/lib/postgresql/data/pgdata/lost+found"],
        "volumeMounts": [
          {
            "name": "data",
            "mountPath": "/var/lib/postgresql/data/pgdata"
          }
        ]
      }
    ]'
spec:
  replicas: 1
  template:
    metadata:
      name: postgres
      labels:
        name: postgres
        project: rooms-booking
        tier: database
        environment: staging
    spec:
      containers:
      - name: postgres
        image: postgres:alpine
        env:
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-data
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - pg_isready -U postgres
          initialDelaySeconds: 30
          timeoutSeconds: 3
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - pg_isready -U postgres
          initialDelaySeconds: 30
          timeoutSeconds: 3
        resources:
          limits:
            memory: 128M
          requests:
            memory: 128M
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-data-claim

---
apiVersion: v1
kind: Service
metadata:
  namespace: rb-staging
  name: postgres
  labels:
    name: postgres
    project: rooms-booking
    tier: database
    environment: staging
spec:
  selector:
    name: postgres
    project: rooms-booking
    tier: database
    environment: staging
  clusterIP: None
  ports:
    - port: 5432
