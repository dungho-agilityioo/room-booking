apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: rb-staging
  name: api
  labels:
    name: api
    project: rooms-booking
    environment: staging
spec:
  replicas: 1
  template:
    metadata:
      namespace: rb-staging
      name: api
      labels:
        name: api
        project: rooms-booking
        tier: backend
        environment: staging
    spec:
      imagePullSecrets:
        - name: docker-registry-secret
      containers:
        - image: asia.gcr.io/rooms-booking-177603/rooms-booking-api:58e31424e786ac2782ad9c7cabb6e4da7c3ce22e
          name: api
          imagePullPolicy: Always
          command: ["/bin/sh", -c]
          args: ["bundle exec puma -C config/puma.rb"]
          ports:
            - containerPort: 3000
          volumeMounts:
          - mountPath: "/home/app/.env"
            name: env
            subPath: api
          env:
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
      volumes:
        - name: env
          configMap:
            name: env

---
apiVersion: v1
kind: Service
metadata:
  namespace: rb-staging
  name: api
  labels:
    name: api
    project: rooms-booking
    tier: loadbalancer
    environment: staging
spec:
  selector:
    name: api
    project: rooms-booking
    tier: backend
    environment: staging
  type: LoadBalancer
  ports:
    - name: http
      port: 3000
      protocol: TCP
      targetPort: 3000
